关于DOS调用：
	1号调用：
		从键盘上输入一个字符，将其对应字符的ASCII码送入AL中，
		并在屏幕上显示该字符。
		如果按下的是Ctrl＋Break组合键，则终止程序执行。
		1号功能调用无须入口参数，出口参数在AL中。 
		该调用最终以字符的形式存储，故
		输入了一个数后，这是一个字符，如果你要变成10进制的数，
		就要减去30h，因为整数1~9和他的ascii码正好相差30h。
		1的arscii码为31h，2的arscii码为32h 
		
关于CMP，EFLAG和跳转：
	1.CMP是比较指令（具体操作是将两操作数相减），
	CMP AL，0DH 是将存于AL的数与十六进数0D相减，
	执行后，两操作数保持不变，受影响的是标志寄存器的如下几个标志位：
	进/借位标志 CF 跳转检验位
	奇偶标志 PF
	辅助进/借位标志 AF
	零标志 ZF 跳转检验位
	正负符号标志 SF SF = 1 负数 SF = 0 正数 
	溢出标志 OF 
	2.jump not zero JNZ跳转命令
	jnz的跳转条件时，都是说ZF=1时跳转，ZF=0时不跳转
	jnc和jc即根据cf标志位的结果进行跳转。
	
		例子：
			cmp oprd1,oprd2，为第一个操作减去第二个操作数，
			但不影响两个操作数的值，它影响flag的CF，ZF，OF，AF，PF。
			若执行指令后，ZF=1 则说明两个数相等，因为zero为1说明结果为0。
			当无符号时，CF=1 则说明了有进位或借位，cmp是进行的减操作，
			故可以看出为借位，所以，oprd1<oprd2。

			CF=0 则说明了无借位，但此时要注意ZF是否为0，若为0，则说明结果不为0，
			故此时oprd1>oprd2，当有符号时，
			若SF=0，OF=0 
			则说明了此时的值为正数，没有溢出，可以直观的看出，oprd1>oprd2，
			若SF=1，OF=0 
			则说明了此时的值为负数，没有溢出，则为oprd1<oprd2，
			若SF=0，OF=1 则说明了此时的值为正数，有溢出，可以看出oprd1<oprd2，
			若SF=1，OF=1
			则说明了此时的值为负数，有溢出，可以看出oprd1>oprd2
			
	