关于数据类型：
	db定义字节类型变量，一个字节数据占1个字节单元，读完一个，偏移量加1
	dw定义字类型变量，一个字数据占2个字节单元，读完一个，偏移量加2
	dd定义双字类型变量，一个双字数据占4个字节单元，读完一个，偏移量加4
	
关于数值类型数据存储的形式：
	背景知识，我们默认从0开始的物理地址为低地址，往上增加的为高地址。
	且一个内存单元计数标志代表了1byte的容量。
		x dd 07345678H 在内存中的存储顺序是：
		内存单元 00 01 02 03 04 05 
		值       78 56 34 07
			总结：值类型数据的存储方式总是低位的存放在低字节，
			高位的存放在高字节。
			注：
				1.(78 56 34 07) = 4byte = 2word 
				2.似乎一个值类型无论大小，都是两位存在一个内存空间内，
				读取一个大数的方式就是用dd这样的类型声明。
			
			另一个需要注意的是：
				背景知识：在8086下寄存器是16位的。这相当于2byte。
				在这个代码中的数据需要有两个寄存器来存储。
					mov ax,word ptr x
					mov bx,word ptr x+2
						注：1.x+2意指移动两个byte的内存单元的地址。
							2.word ptr x不是传送给寄存器地址，
							传送的是值。装入的大小是寄存器大小。
			
关于跳转：
	跳转指令分三类:
	一、无条件跳转: JMP;
	二、根据 CX、ECX 寄存器的值跳转: JCXZ(CX 为 0 则跳转)、JECXZ(ECX 为 0 则跳转);
	三、根据 EFLAGS 寄存器的标志位跳转